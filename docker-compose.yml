services:

  target-db:
    image: jchidem/target-db
    build: './target-db'
    container_name: target-db
    networks:
      - reverse-proxy-postgres-to-kafka
    environment:
      - POSTGRES_DB=target-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5431:5432

  kafka-producer:
    image: jchidem/kafka-producer
    build: './kafka-producer'
    container_name: kafka-producer
    networks:
      - reverse-proxy-postgres-to-kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=10.1.2.25:19092,10.1.2.25:29092,10.1.2.25:39092
      - KAFKA_GROUP_ID=reverse-proxy-postgres-to-kafka
      - KAFKA_SERVER_PORT=9092
      - KAFKA_TOPIC_CUSTOMER=creare.core.isadatapro._customer.list
      - SERVER_PORT=8090
    ports:
      - 8092:8092

  reverse-proxy:
    image: jchidem/reverse-proxy
    container_name: reverse-proxy
    build:
      context: ./reverse-proxy/
      target: dev
      dockerfile: Dockerfile
    volumes:
      - ./reverse-proxy:/app
    depends_on:
      - target-db
    networks:
      - reverse-proxy-postgres-to-kafka
    environment:
      - CORS_ORIGIN= *
      - CORS_METHODS=GET,HEAD,PUT,PATCH,POST,DELETE
      - CORS_CREDENTIALS="true"
      - PROXY_PORT=5432
      - DB_TYPE=postgres
      - DB_HOST=target-db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASS=postgres
      - DB_NAME=target-db
      - DB_TYPE=postgres
    ports:
      - 5432:5432

  kafka:
    container_name: kafka
    image: obsidiandynamics/kafka
    restart: "no"
    ports:
      - "2181:2181"
      - "9092:9092"
    networks:
      - reverse-proxy-postgres-to-kafka
    environment:
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
    volumes:
      - ./data/kafka/data:/var/lib/kafka/data

  redpanda-console:
    container_name: redpanda
    image: docker.redpanda.com/vectorized/console:latest
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    ports:
      - "8081:8080"
    networks:
      - reverse-proxy-postgres-to-kafka
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["kafka:29092"]
    depends_on:
      - "kafka"

networks:
  reverse-proxy-postgres-to-kafka:
    driver: bridge